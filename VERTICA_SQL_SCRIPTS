--STANDARD OR TEMPLATE QUERIES WITH COMMONLY USED TABLES AND JOINS
--FROM VERTICA


--CONTENTS:
-- JOINING ACCOUNT TO CUSTOMER DIMS
-- CREATE A COPY OF A TABLE
-- SPLIT PART / UN CONCATENATING / SPLITTING STRING VALUES
-- EXPLAIN PLAN - QUERY COST FOR OPTIMISING
-- SELECT TABLES WITHIN A GIVEN SCHEMA
-- SHOW REVENUE FOR A GIVEN ACCOUNT AND JOIN TO LOADING FACT
-- SELECT TABLES HAVING A PARTICULAR COLUMN NAME
-- GENERIC ADSALES REVENUE QUERY WITH DATES - DO NOT MODIFY
-- CREATE TABLE
-- INSERT VALUE INTO TABLE 1 ROW AT A TIME
-- DELETE ALL ROWS FROM TABLE (NO WHERE CONDITION SUPPLIED)
-- PREVIEW 1ST 10 ROWS OF TABLE
-- COUNT ROWS IN TABLE
-- INSERT VALUE INTO TABLE 1 ROW AT A TIME
-- DELETE ALL ROWS FROM TABLE (NO WHERE CONDITION SUPPLIED)
-- PREVIEW 1ST 10 ROWS OF TABLE
-- COUNT ROWS IN TABLE
-- LOAD IMPORT CSV INTO VERTICA TABLE 


--JOINING ACCOUNT TO CUSTOMER DIMS
LEFT JOIN NEWS_BAL.ACCOUNT_DIM AS A ON C.CUSTOMER_ID = A.CUSTOMER_ID AND A.CURR_FL = 'Y'

--CREATE A COPY OF A TABLE
CREATE TABLE NRA_ADSALES.NEWTABLE AS SELECT * FROM NRA_ADSALES.EXISTINGTABLE;

--SPLIT PART / UN CONCATENATING / SPLITTING STRING VALUES
SELECT NK, SPLIT_PART(C.NK,'|',2) FROM NEWS_BAL.CUSTOMER_DIM C LIMIT 2;

--EXPLAIN PLAN - OPTIMISING QUERIES
EXPLAIN(
SELECT C.CUSTOMER_NAME, C.CUSTOMER_GROUP_NAME FROM NEWS_BAL.ACCOUNT_PORTFOLIO_DIM A
INNER JOIN NEWS_BAL.CUSTOMER_DIM C ON C.CUSTOMER_ID = A.ACCOUNT_ID AND C.CURR_FL = 'Y'
WHERE A.CURR_FL = 'Y'
);

--EXPLAIN PLAN - OPTIMISING QUERIES
EXPLAIN(
SELECT C.CUSTOMER_NAME, C.CUSTOMER_GROUP_NAME FROM NEWS_BAL.CUSTOMER_DIM C
LEFT JOIN NEWS_BAL.ACCOUNT_PORTFOLIO_DIM A ON C.CUSTOMER_ID = A.ACCOUNT_ID AND C.CURR_FL = 'Y'
WHERE A.CURR_FL = 'Y'
);


--SELECT TABLES WITHIN A GIVEN SCHEMA
	SELECT * FROM TABLES 
	WHERE TABLE_SCHEMA = 'NEWS_BAL'
	AND UPPER(table_name) like 'LOAD'
	--AND create_time > '2019-03-01 00:00:00'
	ORDER BY TABLE_NAME;

--SELECT TABLES HAVING A PARTICULAR COLUMN NAME
	SELECT table_schema, table_name, column_name
	FROM v_catalog.columns
	WHERE UPPER(column_name) like 'MAPPING'
	ORDER BY 1, 2, 3;


--GENERIC ADSALES REVENUE QUERY WITH DATES - DO NOT MODIFY
	SELECT 
	ASR.PUBLICATION_NAME,
	ASR.STATUS_CD,
	ASR.BOOKING_NUMBER,
	ASR.BOOKING_NAME,
	ASR.REVENUE_GROUP_SUB_TYPE,
	CD.FISC_YEAR_NR,
	SUM(ASR.GROSS_REVENUE_EX_ADJ_AMOUNT),
	ASR.STLY_PORTFOLIO_ID,
	ASR.STLY_PV_CATEGORY,
	ASR.CURR_PORTFOLIO_ID,
	ASR.CURR_PV_CATEGORY
	FROM NEWS_BAL.ADSALES_REVENUE AS ASR
	LEFT JOIN NEWS_BAL.CALENDAR_DIM AS CD ON ASR.REPORTING_DATE_ID = CD.DT_ID AND CD.AGGR_LEVL_CD = 'DAY'
	WHERE UPPER(ASR.PUBLICATION_NAME) LIKE '%NEWS%'
	GROUP BY 1,2,3,4,5,6,8,9,10,11
	;

	--SHOW REVENUE FOR A GIVEN ACCOUNT AND JOIN TO LOADING FACT
	SELECT 
	ASR.CUSTOMER_NAME,
	ASR.ACCOUNT_NUMBER,
	ASR.INSERTION_NAME,
	ASR.BOOKING_NAME,
	ASR.BOOKING_NUMBER,
	ASR.STATUS_CD,
	--ASR.REVENUE_GROUP_SUB_TYPE,
	--ASR.STATUS_CD,
	CD.FISC_YEAR_NR,
	--ASR.INSERTION_NUMBER,
	--L.INSERTION_LOADING_NAME,
	SUM(ASR.GROSS_REVENUE_EX_ADJ_AMOUNT) AS GROSS,
	SUM(ASR.SYSTEM_PRICE_LESS_GST_AMOUNT) AS SYS_PRICE,
	SUM(ASR.GROSS_REVENUE_EX_ADJ_AMOUNT) AS GROSS_EX_ADJ,
	SUM(ASR.SYSTEM_PRICE_LESS_GST_AMOUNT) AS SYS_PRICE_EX_ADJ,
	--SUM(ABS(L.BASE_RATE_UNIT_COUNT * L.INSERTION_LOADING_PRICE)) AS CONTRACT_LOAD,
	COUNT(ASR.BOOKING_NUMBER) AS BOOKINGS_COUNT
	FROM NEWS_BAL.ADSALES_REVENUE AS ASR
	LEFT JOIN NEWS_BAL.CALENDAR_DIM AS CD ON ASR.REPORTING_DATE_ID = CD.DT_ID AND CD.AGGR_LEVL_CD = 'DAY'
	--LEFT JOIN NEWS_BAL.INSERTION_LOAD_FACT L ON L.UNIQUE_INSERTION_NUMBER = ASR.INSERTION_NUMBER AND UPPER(L.INSERTION_LOADING_NAME) LIKE '%CONTRACT%' 
	WHERE 1=1
	--AND ASR.REPORTING_DATE_ID BETWEEN 20190301 AND 20190731 
	--AND UPPER(ASR.EMPLOYEE_FULL_NAME) LIKE '%UNK%'
	--AND ASR.STATUS_CD IN ( 'BOOKED','BILLED', 'PUBLISHED', 'PUBANDBILLED','SERVED')
	--AND CD.FISC_YEAR_NR = 2020
	--AND ASR.REVENUE_GROUP_SUB_TYPE LIKE 'PRINT'
	--0012v00002MPjsWAAT / 26188
	--AND ASR.ACCOUNT_NUMBER = 'T1856997'
	AND ASR.BOOKING_NAME LIKE '%142086%'
	--AND UPPER(ASR.CUSTOMER_NAME) LIKE '%REDUCE HOME LOAN%'
	--AND UPPER(ASR.EMPLOYEE_SALES_DIVISION)) LIKE 'UNKNOWN'
	GROUP BY 1,2,3,4,5,6,7
	ORDER BY 5
	;


--CREATE TABLE
CREATE TABLE NRA_ADSALES.TMP_INDUSTRY_FMCGCUSTOMERS (  
CUSTOMER_GROUP_NAME Varchar(200)
);
 
-- INSERT VALUE INTO TABLE 1 ROW AT A TIME
INSERT INTO NRA_ADSALES.TMP_INDUSTRY_FMCGCUSTOMERS VALUES ('TEST VALUE');
-- DELETE ALL ROWS FROM TABLE (NO WHERE CONDITION SUPPLIED)
DELETE FROM NRA_ADSALES.TMP_INDUSTRY_FMCGCUSTOMERS;
-- PREVIEW 1ST 10 ROWS OF TABLE
SELECT * FROM NRA_ADSALES.TMP_INDUSTRY_FMCGCUSTOMERS;
-- COUNT ROWS IN TABLE
SELECT COUNT(*) FROM NRA_ADSALES.TMP_INDUSTRY_FMCGCUSTOMERS; 

--LOAD IMPORT CSV INTO VERTICA TABLE 
 COPY NRA_ADSALES.TMP_INDUSTRY_FMCGCUSTOMERS (
CUSTOMER_GROUP_NAME
)
FROM LOCAL '\\location\filename.csv' DELIMITER ',' NULL ''  RECORD TERMINATOR E'\r\n' NO ESCAPE REJECTED
    DATA '\\location\filename_exceptions.txt'
    EXCEPTIONS '\\location\GROUPLIST20190913_exceptions.txt';
